<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of SimRsOldModel * * @author user */class SimRsOldModel extends CI_Model {    public function __construct() {        parent::__construct();        $this->simrs = $this->load->database('simrs', TRUE);        $this->bp4 = $this->load->database('bp4', TRUE);    }    public function saveToBp4($norm) {        $NOMOR = "";        $TANGGAL = "";        $NOKTA = "";        $NIK = "";        $NAMA = "";        $ALAMAT = "";        $RKRT = "";        $JNSKEL = "";        $LAHIR_TEMPAT = "";        $TGLLAHIR = "";        $STATUS = "";        $PEKERJAAN = "";        $GOLDARAH = "";        $KAB = "";        $DESA = "";        $KEC = "";        $AGAMA = "";        $KTA = "";		$this->simrs->order_by('TANGGAL DESC');		$this->simrs->limit(1);        $this->simrs->where("norm", $norm);        $q = $this->simrs->get("sync_dictionary");		// echo $this->simrs->last_query();        foreach ($q->result() as $d) {            $NOMOR = $d->NOMOR;            $TANGGAL = date("Y-m-d");            $NOKTA = $d->NOKTA;            $NIK = $d->NIK;            $NAMA = $d->NAMA;            $ALAMAT = $d->ALAMAT;            $RKRT = $d->RKRT;            $JNSKEL = $d->JNSKEL;            $LAHIR_TEMPAT = $d->LAHIR_TEMPAT;            $TGLLAHIR = $d->TGLLAHIR;            $STATUS = $d->STATUS;            $PEKERJAAN = $d->PEKERJAAN;            $GOLDARAH = $d->GOLDARAH;            $KAB = $d->KAB;            $DESA = $d->DESA;            $KEC = $d->KEC;            $AGAMA = $d->AGAMA;            $KTA = $d->KTA;        }        $res = $this->SimRsOldModel->save_pend_pasien(                $norm, $NOMOR, $TANGGAL, $NOKTA, $NIK, $NAMA, $ALAMAT, $RKRT, $JNSKEL, $LAHIR_TEMPAT, $TGLLAHIR, $STATUS, $PEKERJAAN, $GOLDARAH, $KAB, $DESA, $KEC, $AGAMA, $KTA        );        return json_encode($res);    }    public function save_pend_pasien(    $norm, $NOMOR, $TANGGAL, $NOKTA, $NIK, $NAMA, $ALAMAT, $RKRT, $JNSKEL, $LAHIR_TEMPAT, $TGLLAHIR, $STATUS, $PEKERJAAN, $GOLDARAH, $KAB, $DESA, $KEC, $AGAMA, $KTA    ) {        $tmp_no = substr($NOMOR, 5, 6);		//cek norm = rmlama		//jika sama        if ($tmp_no == $norm) {			//generate norm format rmlama            $NOMOR = substr($NAMA, 0, 1) . ".000" . $norm;            $sql_i = [                "NOMOR" => $NOMOR,                "TANGGAL" => $TANGGAL,                "NOKTA" => $NOKTA,                "NIK" => $NIK,                "NAMA" => $NAMA,                "ALAMAT" => $ALAMAT,                "RKRT" => $RKRT,                "JNSKEL" => $JNSKEL,                "LAHIR_TEMPAT" => $LAHIR_TEMPAT,                "TGLLAHIR" => $TGLLAHIR,                "STATUS" => $STATUS,                "PEKERJAAN" => $PEKERJAAN,                "GOLDARAH" => $GOLDARAH,                "KAB" => $KAB,                "DESA" => $DESA,                "KEC" => $KEC,                "AGAMA" => $AGAMA,                "KTA" => $KTA            ];            $q = $this->bp4->get_where('pend_pasien', ['nomor' => $NOMOR]);            if ($q->num_rows() == 0) {                $res = $this->do_simpan_pend_pasien($sql_i);            } else {                $where = ["NOMOR" => $NOMOR];                $res = $this->do_update_pend_pasien($sql_i, $where);            }        } else {            $sql_u = [                "TANGGAL" => $TANGGAL,                "NOKTA" => $NOKTA,                "NIK" => $NIK,                "NAMA" => $NAMA,                "ALAMAT" => $ALAMAT,                "RKRT" => $RKRT,                "JNSKEL" => $JNSKEL,                "LAHIR_TEMPAT" => $LAHIR_TEMPAT,                "TGLLAHIR" => $TGLLAHIR,                "STATUS" => $STATUS,                "PEKERJAAN" => $PEKERJAAN,                "GOLDARAH" => $GOLDARAH,                "KAB" => $KAB,                "DESA" => $DESA,                "KEC" => $KEC,                "AGAMA" => $AGAMA,                "KTA" => $KTA            ];            $where = ["NOMOR" => $NOMOR];            $res = $this->do_update_pend_pasien($sql_u, $where);        }        return $res;    }    private function cek_data($norm, $nik, $noasuransi) {            }    public function do_simpan_pend_pasien($sql_i) {        $this->bp4->trans_start();        $this->bp4->insert("pend_pasien", $sql_i);        $this->bp4->trans_complete();        if ($this->bp4->trans_status() === TRUE) {            $res = $this->ResponseModel->res201(['message' => 'data pend pasien berhasil disimpan!']);        }        return $res;    }    public function do_update_pend_pasien($sql_u, $where) {        $this->bp4->trans_start();        $this->bp4->update("pend_pasien", $sql_u, $where);        $this->bp4->trans_complete();        if ($this->bp4->trans_status() === TRUE) {            $res = $this->ResponseModel->res201(['message' => 'data pend pasien berhasil diupdate!']);        }        return $res;    }    public function saveKunjToBp4($norm) {        $tanggal = "";        $nokunjungan = "";        $bru = "";        $lma = "";        $lk = "";        $pr = "";        $kab = "";        $nomor = "";        $keperluan = "";        $Umur = "";        $jenisbiaya = "";        $biaya = "";        $this->simrs->where("norm", $norm);		$this->simrs->order_by("tanggal DESC");		$this->simrs->limit(1);        $q = $this->simrs->get("sync_kunj");        $lq = $this->simrs->last_query();        foreach ($q->result() as $d) {            $tanggal = date("Y-m-d", strtotime($d->tanggal));            $nokunjungan = $d->nokunjungan;            $bru = $d->bru;            $lma = $d->lma;            $lk = $d->lk;            $pr = $d->pr;            $kab = $d->kab;            $nomor = $d->nomor;            $keperluan = $d->keperluan;            $Umur = $d->Umur;            $jenisbiaya = $d->jenisbiaya;            $biaya = $d->biaya;        }        $res = $this->SimRsOldModel->save_pend_kunjungan(                $tanggal, $nokunjungan, $bru, $lma, $lk, $pr, $kab, $nomor, $keperluan, $Umur, $jenisbiaya, $biaya        );        return json_encode($lq);    }    public function save_pend_kunjungan(    $tanggal, $nokunjungan, $bru, $lma, $lk, $pr, $kab, $nomor, $keperluan, $Umur, $jenisbiaya, $biaya    ) {        $sql_i = [            "tanggal" => $tanggal,            "nokunjungan" => $nokunjungan,            "bru" => $bru,            "lma" => $lma,            "lk" => $lk,            "pr" => $pr,            "kab" => $kab,            "nomor" => $nomor,            "keperluan" => $keperluan,            "Umur" => $Umur,            "jenisbiaya" => $jenisbiaya,            "biaya" => $biaya        ];        $c = $this->bp4->get_where("pend_kunjungan", ["nomor" => $nomor, "tanggal" => $tanggal]);       $s=$this->bp4->last_query();//        print_r($c->result());        if ($c->num_rows() == 0) {            $this->bp4->trans_start();            $this->bp4->insert("pend_kunjungan", $sql_i);            $this->bp4->trans_complete();        } else {            $this->bp4->trans_start();            $this->bp4->update("pend_kunjungan", $sql_i, ["nomor" => $nomor, "tanggal" => $tanggal]);            $this->bp4->trans_complete();        }        if ($this->bp4->trans_status() === TRUE) {            $res = $this->ResponseModel->res201(['message' => $s]);        } else {            $res = $this->ResponseModel->res304(['message' => 'data pend kunjungan sudah pernah diinput!']);        }        return $res;    }    public function delete_pend_kunjungan($NOMOR, $nokunjungan, $tanggal) {        $tanggal = date('Y-m-d', strtotime($tanggal));        $this->bp4->trans_start();        $this->bp4->delete("pend_kunjungan", ["NOMOR" => $NOMOR, "nokunjungan" => $nokunjungan, "tanggal" => $tanggal]);        $this->bp4->trans_complete();        if ($this->bp4->trans_status() === TRUE) {            $res = $this->ResponseModel->res200(['message' => 'Data Pendaftaran Kunjungan Berhasil dihapus!']);        } else {            $res = $this->ResponseModel->res304(['message' => 'Gagal Menghapus Data Pendaftaran Kunjungan!']);        }        return json_encode($res);    }}